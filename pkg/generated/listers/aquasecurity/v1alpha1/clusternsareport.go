// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/aquasecurity/starboard/pkg/apis/aquasecurity/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ClusterNsaReportLister helps list ClusterNsaReports.
// All objects returned here must be treated as read-only.
type ClusterNsaReportLister interface {
	// List lists all ClusterNsaReports in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ClusterNsaReport, err error)
	// Get retrieves the ClusterNsaReport from the index for a given name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ClusterNsaReport, error)
	ClusterNsaReportListerExpansion
}

// clusterNsaReportLister implements the ClusterNsaReportLister interface.
type clusterNsaReportLister struct {
	indexer cache.Indexer
}

// NewClusterNsaReportLister returns a new ClusterNsaReportLister.
func NewClusterNsaReportLister(indexer cache.Indexer) ClusterNsaReportLister {
	return &clusterNsaReportLister{indexer: indexer}
}

// List lists all ClusterNsaReports in the indexer.
func (s *clusterNsaReportLister) List(selector labels.Selector) (ret []*v1alpha1.ClusterNsaReport, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ClusterNsaReport))
	})
	return ret, err
}

// Get retrieves the ClusterNsaReport from the index for a given name.
func (s *clusterNsaReportLister) Get(name string) (*v1alpha1.ClusterNsaReport, error) {
	obj, exists, err := s.indexer.GetByKey(name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("clusternsareport"), name)
	}
	return obj.(*v1alpha1.ClusterNsaReport), nil
}
